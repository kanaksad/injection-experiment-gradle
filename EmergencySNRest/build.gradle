plugins {
    id 'java'
    id 'org.checkerframework' version '0.6.37'
}

dependencies {
    implementation "com.zaxxer:HikariCP:1.3.8"
    implementation "org.slf4j:slf4j-api:1.7.6"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.0-rc1"
    implementation "org.apache.logging.log4j:log4j-api:2.0-rc1"
    implementation "org.apache.logging.log4j:log4j-core:2.0-rc1"
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.4'
    implementation 'org.glassfish.jersey.media:jersey-media-moxy:2.4'
    implementation "com.h2database:h2:1.4.178"
    implementation 'javax.servlet:servlet-api:2.5'
    implementation "com.google.code.gson:gson:2.2.4"
    implementation 'org.jgrapht:jgrapht-core:0.9.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

// Annotator scripts
def checker_config = project.projectDir.toString() + "/annotator-out/checker.xml"
checkerFramework {
    checkers = [
            'edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker',
    ]

    extraJavacArgs = [
            '-AannotatedPackages=' + 'edu.cmu.sv.ws.ssnoc',
            "-AenableLibraryCheck=$System.env.ANNOTATOR_LIBRARY",
            "-AenablePolyTaintInference=$System.env.ANNOTATOR_POLY",
            "-AenableTypeArgumentInference=$System.env.ANNOTATOR_TYPE_ARG",
            "-AenableSerialization",
            "-AserializationConfigPath=" + checker_config,
            '-Awarns'
    ]
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxerrs" << "100000"
    options.compilerArgs << "-Xmaxwarns" << "100000"
    options.compilerArgs += '-nowarn'
}
